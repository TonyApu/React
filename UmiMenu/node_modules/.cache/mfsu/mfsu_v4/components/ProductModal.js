import React, { useState } from "react";
import axios from "axios";
import { useMutation, useQueryClient } from "umi";
import {
  Modal,
  Form,
  Input,
  Row,
  Col,
  DatePicker,
  Checkbox,
  Button,
  InputNumber,
  Space
} from "antd";
import moment from "moment";
import { useUpdateEffect } from "ahooks";
import { dateFormat } from "@/service/constant/index";
import { handleStatus } from "../service/utils/index";
export class Product {
  constructor(id, name, price, withSauce, quantity, expiredDate, description, src) {
    this.id = id;
    this.name = name;
    this.price = price;
    this.withSauce = withSauce;
    this.quantity = quantity;
    this.expiredDate = expiredDate;
    this.description = description;
    this.src = src;
  }
}
const ProductModal = ({ products, handleOk, handleCancel, isModalOpen }) => {
  const [form] = Form.useForm();
  const { TextArea } = Input;
  const queryClient = useQueryClient();
  const [withSauce, setWithSauce] = useState(false);
  useUpdateEffect(() => {
    form.setFieldsValue({
      ...products,
      expiredDate: moment(products.expiredDate, dateFormat)
    });
    setWithSauce(products.withSauce);
  }, [products]);
  const productsDeleteMutation = useMutation({
    mutationFn(id) {
      return axios.delete(`/api/products/${id}`).then((response) => {
        handleStatus(response.data.status);
      });
    },
    onSettled: () => {
      queryClient.invalidateQueries({ queryKey: ["products"] });
    }
  });
  const productsUpdateMutation = useMutation({
    mutationFn(values) {
      return axios.post(
        `/api/products/${products.id}`,
        {},
        {
          params: {
            product: {
              id: products.id,
              name: products.name,
              src: products.src,
              ...values
            }
          }
        }
      ).then((response) => {
        handleStatus(response.data.status);
      });
    },
    onSettled: () => {
      queryClient.invalidateQueries({ queryKey: ["products"] });
    }
  });
  const onFinish = (values) => {
    productsUpdateMutation.mutate(values);
  };
  return /* @__PURE__ */ React.createElement(
    Modal,
    {
      title: products.name,
      open: isModalOpen,
      onOk: handleOk,
      onCancel: handleCancel,
      footer: null
    },
    /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(
      Form,
      {
        form,
        name: "basic",
        layout: "vertical",
        autoComplete: "off",
        onFinish
      },
      /* @__PURE__ */ React.createElement(Row, { gutter: 16 }, /* @__PURE__ */ React.createElement(Col, { span: 12 }, /* @__PURE__ */ React.createElement(
        Form.Item,
        {
          label: "Gi\xE1",
          name: "price",
          rules: [{ required: true, message: "Th\xF4ng tin b\u1EAFt bu\u1ED9c!" }]
        },
        /* @__PURE__ */ React.createElement(Input, null)
      )), /* @__PURE__ */ React.createElement(Col, { span: 12 }, /* @__PURE__ */ React.createElement(Form.Item, { label: "K\xE8m n\u01B0\u1EDBc s\u1ED1t", name: "withSauce" }, /* @__PURE__ */ React.createElement(Checkbox, { checked: withSauce })))),
      /* @__PURE__ */ React.createElement(Row, { gutter: 16 }, /* @__PURE__ */ React.createElement(Col, { span: 12 }, /* @__PURE__ */ React.createElement(
        Form.Item,
        {
          label: "S\u1ED1 l\u01B0\u1EE3ng",
          name: "quantity",
          rules: [
            { required: true, message: "Th\xF4ng tin b\u1EAFt bu\u1ED9c!" },
            {
              validator: (rule, value, cb) => {
                value > 30 ? cb("S\u1ED1 l\u01B0\u1EE3ng t\u1ED1i \u0111a kh\xF4ng qu\xE1 30.") : cb();
              }
            }
          ]
        },
        /* @__PURE__ */ React.createElement(InputNumber, { style: { width: "100%" } })
      )), /* @__PURE__ */ React.createElement(Col, { span: 12 }, /* @__PURE__ */ React.createElement(
        Form.Item,
        {
          label: "HSD",
          name: "expiredDate",
          rules: [
            { required: true, message: "Th\xF4ng tin b\u1EAFt bu\u1ED9c!" },
            {
              validator: (rule, value, cb) => {
                value < /* @__PURE__ */ new Date() ? cb("Ng\xE0y h\u1EBFt h\u1EA1n ph\u1EA3i l\u1EDBn h\u01A1n h\xF4m nay.") : cb();
              }
            }
          ]
        },
        /* @__PURE__ */ React.createElement(
          DatePicker,
          {
            format: dateFormat,
            style: { display: "inherit" }
          }
        )
      ))),
      /* @__PURE__ */ React.createElement(
        Form.Item,
        {
          label: "M\xF4 t\u1EA3",
          name: "description",
          rules: [
            {
              type: "string",
              max: 999,
              message: "B\u1EA1n ch\u1EC9 \u0111\u01B0\u1EE3c nh\u1EADp t\u1ED1i \u0111a 999 k\xED t\u1EF1"
            }
          ]
        },
        /* @__PURE__ */ React.createElement(TextArea, { rows: 6 })
      ),
      /* @__PURE__ */ React.createElement(
        "img",
        {
          src: products?.src,
          style: { width: "-webkit-fill-available", height: "200px" }
        }
      ),
      /* @__PURE__ */ React.createElement(Space, null, /* @__PURE__ */ React.createElement(Button, { key: "back", onClick: handleCancel }, "Tr\u1EDF V\u1EC1"), /* @__PURE__ */ React.createElement(Button, { key: "submit", type: "primary", htmlType: "submit" }, "C\u1EADp Nh\u1EADt Th\xF4ng Tin"), /* @__PURE__ */ React.createElement(
        Button,
        {
          key: "delete",
          type: "primary",
          danger: true,
          onClick: () => {
            productsDeleteMutation.mutate(products.id);
            handleOk();
          }
        },
        "Xo\xE1 Kh\u1ECFi Menu"
      ))
    ))
  );
};
export default ProductModal;
